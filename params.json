{"name":"Keyholer","tagline":"Simple SSH key management for shell servers","body":"Keyholer - Simple SSH key management for shell servers\r\n======================================================\r\n\r\nKeyholer is a web application that will allow your users to add an SSH key\r\nto their authorized_keys file so they can gain access to a system they don't\r\notherwise have an SSH key for. It attempts to do so in as secure a fashion\r\nas possible.\r\n\r\nUser Flow/Process:\r\n------------------\r\n\r\n1. User visits keyholer-web\r\n2. User enters their username, presses submit\r\n    1. keyholer-web submits command, \"login <username>\"\r\n    2. keyholerd checks for ~<username>/.phonenumber, if bad/missing return False\r\n    3. keyholerd generates and sends random code via SMS, return True\r\n    4. keyholer-web checks return value, returns error if False\r\n3. keyholer-web displays a verification page, user enters code from SMS\r\n    1. keyholer-web submits command, \"verify <username> <code>\"\r\n    2. keyholerd checks username and code, returns false if wrong\r\n    3. keyholerd reads the user's authorized_keys, finds list of ID's\r\n    4. keyholerd returns: True\\n<list of ID's>\r\n4. keyholer-web displays the list of existing keys and <input> for a new key\r\n5. User pastes a new key into the textarea, clicks Submit\r\n    1. keyholer-web submits command, \"add_key <username> <code> <ssh_key>\"\r\n    2. keyholerd makes sure the code is valid, if not return False\r\n    3. keyholerd makes sure the ssh_key is valid, if not return False\r\n    4. keyholerd adds the key to the user's authorized_keys file","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}