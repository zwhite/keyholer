#!/usr/bin/env python
from socket import socket, AF_UNIX, SOCK_STREAM
import sys


class KeyholerException(Exception):
    pass


class KeyholerClient(object):
    """
        Class for interacting with the keyholer backend.
    """
    def __init__(self, sock='/var/tmp/keyholer.socket'):
        self.s = None
        self.socket = sock

    def _readline(self):
        """Iterate over the data in a socket's receive buffer line by line
        """
        buffer = self.s.recv(4096)

        while True:
            if '\n' in buffer:
                line, buffer = buffer.split('\n', 1)
                yield line

            else:
                more = self.s.recv(4096)
                if not more:
                    break

                buffer = buffer+more
        if buffer:
            yield buffer

    def command(self, command):
        """Send a command to the backend and return the response
        """
        self.s = socket(AF_UNIX, SOCK_STREAM)
        self.s.connect(self.socket)
        self.s.sendall(command + "\n")
        result = '\n'.join([line for line in self._readline()])
        self.s.close()

        if result == 'Exception':
            raise KeyholerException

        return result

    # Commands the user can use to interact with KeyholerD
    def login(self, user):
        """Sends a code to the phone number on file for user.
        """
        return self.command('login %s' % user)

    def verify(self, user, code):
        """Verifies that a user's code is correct

        Returns a list of SSH keys that are already available for the user,
        or False.
        """
        return self.command('verify %s %s' % (user, code))

    def add_key(self, user, code, ssh_keytext):
        """Adds a key to the user's authorized_keys file.
        """
        return self.command('add_key %s %s %s' % (user, code, ssh_keytext))


if __name__ == '__main__':
    data = ' '.join(sys.argv[1:])

    c = KeyholerClient()
    print c.login('zwhite')
    code = raw_input('Code: ')
    print c.verify('zwhite', code)
    print c.add_key('zwhite', code, 'ssh-dss AAAAB3NzaC1kc3MAAACBALU5xUTKDIJ/x94sMw7Hnj0fEKIzhgXyUa20yLNBnAmIG9mOTb1ucZRsn5zO/tVToL/US5I7ns9l8hZw3JsU6qDEA6jtlsO5JmtowsT0mmiPGxrnlAKI5CtL7pPZ9G9KZCAM74XV3dcq1jNiQ0HH+Hhh2Rgof50py0po2HNinHbfAAAAFQDSInXWrwIRF+sqEn49friyzM75ZQAAAIAozydrNdkCVsxCsLS3rthf/CB1pZtJ0fLmpTvY+F4VPi+Tfw2knZSGMJV2hvu7UoydkulkxLxkspLK5NZckppkWZE/3dyXlYqsaiwNS1QAv2ICAqRFEo60YtaOwdmOg4yj7WZQ1egaCbIZUChQ/TK4DBnx8Bvf8jv19TWv6yrsDgAAAIBGGaNuaLHD0rZHe7Yu6Lx55ddEJ5ZMFB7bJFCfnGZqBwtJwLzHXvTAFqY761X47bTA+U5Hv83b39Tx5x7/tX2mBSZAhnz4qcNEXW3jH+kPyOFh+tpzZkUkAmsLjuSXlh4/glHPDE5cqDW9w7N9C9/6nV6IxVyOc774EpK9C1ux8A== zwhite@XXX.com')
